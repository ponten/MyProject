<log4j:event logger="Sajet_MES_WPF_Style.App" timestamp="1612163763661" level="FATAL" thread="1"><log4j:message>無法存取已處置的物件。
物件名稱: 'fMain'。</log4j:message><log4j:properties><log4j:data name="log4net:HostName" value="Robert-Dev-PC" /><log4j:data name="log4jmachinename" value="Robert-Dev-PC" /><log4j:data name="LogFileName" value="Sajet_MES_Client" /><log4j:data name="log4net:Identity" value="" /><log4j:data name="log4net:UserName" value="ROBERT-DEV-PC\Administrator" /><log4j:data name="log4japp" value="Sajet MES.exe" /></log4j:properties><log4j:throwable>System.ObjectDisposedException: 無法存取已處置的物件。
物件名稱: 'fMain'。
   於 System.Windows.Forms.Control.CreateHandle()
   於 System.Windows.Forms.Form.CreateHandle()
   於 System.Windows.Forms.Control.get_Handle()
   於 Sheva.Windows.Interop.NewFormHost.CheckChildValidity()
   於 Sheva.Windows.Interop.NewFormHost.BuildWindowCore(HandleRef hwndParent)
   於 System.Windows.Interop.HwndHost.BuildWindow(HandleRef hwndParent)
   於 System.Windows.Interop.HwndHost.BuildOrReparentWindow()
   於 System.Windows.Interop.HwndHost.OnSourceChanged(Object sender, SourceChangedEventArgs e)
   於 System.Windows.SourceChangedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)
   於 System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)
   於 System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)
   於 System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)
   於 System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)
   於 System.Windows.UIElement.RaiseEvent(RoutedEventArgs e)
   於 System.Windows.PresentationSource.UpdateSourceOfElement(DependencyObject doTarget, DependencyObject doAncestor, DependencyObject doOldParent)
   於 System.Windows.PresentationSource.OnVisualAncestorChanged(DependencyObject uie, AncestorChangedEventArgs e)
   於 System.Windows.UIElement.OnVisualAncestorChanged(Object sender, AncestorChangedEventArgs e)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent)
   於 System.Windows.Media.Visual.AddVisualChild(Visual child)
   於 System.Windows.FrameworkElement.set_TemplateChild(UIElement value)
   於 System.Windows.Controls.ContentPresenter.UseContentTemplate.BuildVisualTree(FrameworkElement container)
   於 System.Windows.StyleHelper.ApplyTemplateContent(UncommonField`1 dataField, DependencyObject container, FrameworkElementFactory templateRoot, Int32 lastChildIndex, HybridDictionary childIndexFromChildID, FrameworkTemplate frameworkTemplate)
   於 System.Windows.FrameworkTemplate.ApplyTemplateContent(UncommonField`1 templateDataField, FrameworkElement container)
   於 System.Windows.FrameworkElement.ApplyTemplate()
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Controls.Border.MeasureOverride(Size constraint)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Window.MeasureOverrideHelper(Size constraint)
   於 System.Windows.Window.MeasureOverride(Size availableSize)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.ContextLayoutManager.UpdateLayout()
   於 System.Windows.ContextLayoutManager.UpdateLayoutCallback(Object arg)
   於 System.Windows.Media.MediaContext.InvokeOnRenderCallback.DoWork()
   於 System.Windows.Media.MediaContext.FireInvokeOnRenderCallbacks()
   於 System.Windows.Media.MediaContext.RenderMessageHandlerCore(Object resizedCompositionTarget)
   於 System.Windows.Media.MediaContext.RenderMessageHandler(Object resizedCompositionTarget)
   於 System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   於 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)</log4j:throwable><log4j:locationInfo class="System.Windows.Forms.Control" method="Void CreateHandle()" file="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Windows.Forms\v4.0_4.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" line="0" /></log4j:event>
<log4j:event logger="Sajet_MES_WPF_Style.App" timestamp="1612163764064" level="FATAL" thread="1"><log4j:message>無法存取已處置的物件。
物件名稱: 'fMain'。</log4j:message><log4j:properties><log4j:data name="log4net:HostName" value="Robert-Dev-PC" /><log4j:data name="log4jmachinename" value="Robert-Dev-PC" /><log4j:data name="LogFileName" value="Sajet_MES_Client" /><log4j:data name="log4net:Identity" value="" /><log4j:data name="log4net:UserName" value="ROBERT-DEV-PC\Administrator" /><log4j:data name="log4japp" value="Sajet MES.exe" /></log4j:properties><log4j:throwable>System.ObjectDisposedException: 無法存取已處置的物件。
物件名稱: 'fMain'。
   於 System.Windows.Forms.Control.CreateHandle()
   於 System.Windows.Forms.Form.CreateHandle()
   於 System.Windows.Forms.Control.get_Handle()
   於 Sheva.Windows.Interop.NewFormHost.CheckChildValidity()
   於 Sheva.Windows.Interop.NewFormHost.BuildWindowCore(HandleRef hwndParent)
   於 System.Windows.Interop.HwndHost.BuildWindow(HandleRef hwndParent)
   於 System.Windows.Interop.HwndHost.BuildOrReparentWindow()
   於 System.Windows.Interop.HwndHost.OnSourceChanged(Object sender, SourceChangedEventArgs e)
   於 System.Windows.SourceChangedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)
   於 System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)
   於 System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)
   於 System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)
   於 System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)
   於 System.Windows.UIElement.RaiseEvent(RoutedEventArgs e)
   於 System.Windows.PresentationSource.UpdateSourceOfElement(DependencyObject doTarget, DependencyObject doAncestor, DependencyObject doOldParent)
   於 System.Windows.PresentationSource.OnVisualAncestorChanged(DependencyObject uie, AncestorChangedEventArgs e)
   於 System.Windows.UIElement.OnVisualAncestorChanged(Object sender, AncestorChangedEventArgs e)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent)
   於 System.Windows.Media.Visual.AddVisualChild(Visual child)
   於 System.Windows.FrameworkElement.set_TemplateChild(UIElement value)
   於 System.Windows.Controls.ContentPresenter.UseContentTemplate.BuildVisualTree(FrameworkElement container)
   於 System.Windows.StyleHelper.ApplyTemplateContent(UncommonField`1 dataField, DependencyObject container, FrameworkElementFactory templateRoot, Int32 lastChildIndex, HybridDictionary childIndexFromChildID, FrameworkTemplate frameworkTemplate)
   於 System.Windows.FrameworkTemplate.ApplyTemplateContent(UncommonField`1 templateDataField, FrameworkElement container)
   於 System.Windows.FrameworkElement.ApplyTemplate()
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Controls.Border.MeasureOverride(Size constraint)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Window.MeasureOverrideHelper(Size constraint)
   於 System.Windows.Window.MeasureOverride(Size availableSize)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.ContextLayoutManager.UpdateLayout()
   於 System.Windows.UIElement.UpdateLayout()
   於 System.Windows.Interop.HwndSource.SetLayoutSize()
   於 System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)
   於 System.Windows.Interop.HwndSource.set_RootVisual(Visual value)
   於 System.Windows.Window.SetRootVisual()
   於 System.Windows.Window.SetRootVisualAndUpdateSTC()
   於 System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)
   於 System.Windows.Window.CreateSourceWindow(Boolean duringShow)
   於 System.Windows.Window.CreateSourceWindowDuringShow()
   於 System.Windows.Window.SafeCreateWindowDuringShow()
   於 System.Windows.Window.ShowHelper(Object booleanBox)
   於 System.Windows.Window.Show()
   於 System.Windows.Window.ShowDialog()
   於 Sajet_MES_WPF_Style.App.ShowExceptionWindow(String ExceptionMessage, String ExceptionStackTrace)
   於 Sajet_MES_WPF_Style.App.Application_DispatcherUnhandledException(Object sender, DispatcherUnhandledExceptionEventArgs e)
   於 System.Windows.Threading.DispatcherUnhandledExceptionEventHandler.Invoke(Object sender, DispatcherUnhandledExceptionEventArgs e)
   於 System.Windows.Threading.Dispatcher.CatchException(Exception e)
   於 System.Windows.Threading.Dispatcher.CatchExceptionStatic(Object source, Exception e)
   於 System.Windows.Threading.ExceptionWrapper.CatchException(Object source, Exception e, Delegate catchHandler)
   於 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   於 System.Windows.Threading.DispatcherOperation.InvokeImpl()
   於 System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)
   於 System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   於 System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   於 System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
   於 MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)
   於 System.Windows.Threading.DispatcherOperation.Invoke()
   於 System.Windows.Threading.Dispatcher.ProcessQueue()
   於 System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)
   於 MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)
   於 MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)
   於 System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   於 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)</log4j:throwable><log4j:locationInfo class="System.Windows.Forms.Control" method="Void CreateHandle()" file="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Windows.Forms\v4.0_4.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" line="0" /></log4j:event>
<log4j:event logger="Sajet_MES_WPF_Style.App" timestamp="1612163764100" level="FATAL" thread="1"><log4j:message>無法存取已處置的物件。
物件名稱: 'fMain'。</log4j:message><log4j:properties><log4j:data name="log4net:HostName" value="Robert-Dev-PC" /><log4j:data name="log4jmachinename" value="Robert-Dev-PC" /><log4j:data name="LogFileName" value="Sajet_MES_Client" /><log4j:data name="log4net:Identity" value="" /><log4j:data name="log4net:UserName" value="ROBERT-DEV-PC\Administrator" /><log4j:data name="log4japp" value="Sajet MES.exe" /></log4j:properties><log4j:throwable>System.ObjectDisposedException: 無法存取已處置的物件。
物件名稱: 'fMain'。
   於 System.Windows.Forms.Control.CreateHandle()
   於 System.Windows.Forms.Form.CreateHandle()
   於 System.Windows.Forms.Control.get_Handle()
   於 Sheva.Windows.Interop.NewFormHost.CheckChildValidity()
   於 Sheva.Windows.Interop.NewFormHost.BuildWindowCore(HandleRef hwndParent)
   於 System.Windows.Interop.HwndHost.BuildWindow(HandleRef hwndParent)
   於 System.Windows.Interop.HwndHost.BuildOrReparentWindow()
   於 System.Windows.Interop.HwndHost.OnSourceChanged(Object sender, SourceChangedEventArgs e)
   於 System.Windows.SourceChangedEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)
   於 System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)
   於 System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)
   於 System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)
   於 System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)
   於 System.Windows.UIElement.RaiseEvent(RoutedEventArgs e)
   於 System.Windows.PresentationSource.UpdateSourceOfElement(DependencyObject doTarget, DependencyObject doAncestor, DependencyObject doOldParent)
   於 System.Windows.PresentationSource.OnVisualAncestorChanged(DependencyObject uie, AncestorChangedEventArgs e)
   於 System.Windows.UIElement.OnVisualAncestorChanged(Object sender, AncestorChangedEventArgs e)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.ProcessAncestorChangedNotificationRecursive(DependencyObject e, AncestorChangedEventArgs args)
   於 System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent)
   於 System.Windows.Media.Visual.AddVisualChild(Visual child)
   於 System.Windows.FrameworkElement.set_TemplateChild(UIElement value)
   於 System.Windows.Controls.ContentPresenter.UseContentTemplate.BuildVisualTree(FrameworkElement container)
   於 System.Windows.StyleHelper.ApplyTemplateContent(UncommonField`1 dataField, DependencyObject container, FrameworkElementFactory templateRoot, Int32 lastChildIndex, HybridDictionary childIndexFromChildID, FrameworkTemplate frameworkTemplate)
   於 System.Windows.FrameworkTemplate.ApplyTemplateContent(UncommonField`1 templateDataField, FrameworkElement container)
   於 System.Windows.FrameworkElement.ApplyTemplate()
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Controls.Border.MeasureOverride(Size constraint)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.Window.MeasureOverrideHelper(Size constraint)
   於 System.Windows.Window.MeasureOverride(Size availableSize)
   於 System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   於 System.Windows.UIElement.Measure(Size availableSize)
   於 System.Windows.ContextLayoutManager.UpdateLayout()
   於 System.Windows.UIElement.UpdateLayout()
   於 System.Windows.Interop.HwndSource.SetLayoutSize()
   於 System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)
   於 System.Windows.Interop.HwndSource.set_RootVisual(Visual value)
   於 System.Windows.Window.SetRootVisual()
   於 System.Windows.Window.SetRootVisualAndUpdateSTC()
   於 System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)
   於 System.Windows.Window.CreateSourceWindow(Boolean duringShow)
   於 System.Windows.Window.CreateSourceWindowDuringShow()
   於 System.Windows.Window.SafeCreateWindowDuringShow()
   於 System.Windows.Window.ShowHelper(Object booleanBox)
   於 System.Windows.Window.Show()
   於 System.Windows.Window.ShowDialog()
   於 Sajet_MES_WPF_Style.App.ShowExceptionWindow(String ExceptionMessage, String ExceptionStackTrace)
   於 Sajet_MES_WPF_Style.App.Application_DispatcherUnhandledException(Object sender, DispatcherUnhandledExceptionEventArgs e)
   於 System.Windows.Threading.DispatcherUnhandledExceptionEventHandler.Invoke(Object sender, DispatcherUnhandledExceptionEventArgs e)
   於 System.Windows.Threading.Dispatcher.CatchException(Exception e)
   於 System.Windows.Threading.Dispatcher.CatchExceptionStatic(Object source, Exception e)
   於 System.Windows.Threading.ExceptionWrapper.CatchException(Object source, Exception e, Delegate catchHandler)
   於 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   於 System.Windows.Threading.DispatcherOperation.InvokeImpl()
   於 System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)
   於 System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   於 System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   於 System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
   於 MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)
   於 System.Windows.Threading.DispatcherOperation.Invoke()
   於 System.Windows.Threading.Dispatcher.ProcessQueue()
   於 System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)
   於 MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)
   於 MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)
   於 System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   於 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)</log4j:throwable><log4j:locationInfo class="System.Windows.Forms.Control" method="Void CreateHandle()" file="C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Windows.Forms\v4.0_4.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" line="0" /></log4j:event>
